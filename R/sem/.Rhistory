corp <- VCorpus((VectorSource(t(lit_abs))))
dtm <- DocumentTermMatrix(corp,
control = list(weighting =
function(x)
weightTfIdf(x, normalize =
FALSE),
stopwords = TRUE))
imdf <- data.frame(tm::inspect(dtm))
class(imdf)
head(imdf)
is.data.frame(imdf)
names(hcdf)
names(imdf)
intersect(names(hcdf),
names(imdf))
lit <- read.csv(file.choose())
lit_abs <- lit["Abstract"]
length(t(lit_abs))
corp <- VCorpus((VectorSource(t(lit_abs))))
dtm <- DocumentTermMatrix(corp,
control = list(weighting =
function(x)
weightTfIdf(x, normalize =
FALSE),
stopwords = TRUE))
lit <- read.csv(file.choose(), encoding = "UTF-8")
lit_abs <- lit["Abstract"]
length(t(lit_abs))
corp <- VCorpus((VectorSource(t(lit_abs))))
dtm <- DocumentTermMatrix(corp,
control = list(weighting =
function(x)
weightTfIdf(x, normalize =
FALSE),
stopwords = TRUE))
lit <- iconv(lit, "WINDOWS-1252","UTF-8")
names(lit)
lit <- read.csv(file.choose(), encoding = "UTF-8")
iconv(lit, "WINDOWS-1252","UTF-8")
iconv(lit, "WINDOWS-1252","UTF-8")
names(lit)
lit_abs <- lit["Abstract"]
length(t(lit_abs))
corp <- VCorpus((VectorSource(t(lit_abs))))
dtm <- DocumentTermMatrix(corp,
control = list(weighting =
function(x)
weightTfIdf(x, normalize =
FALSE),
stopwords = TRUE))
lit <- read.csv(file.choose(), encoding = "UTF-8")
lit <- as.data.frame(
lapply(lit, enc2utf8),
stringsAsFactors = FALSE
)
lit <- as.data.frame(
lapply(lit, enc2utf8),
)
write.csv(lit, "data_input.csv",  fileEncoding = "UTF-8")
lit <- read.csv(file.choose(), encoding = "UTF-8")
coronadata <- read.csv("D:/Research/papers/covid19/MAIN/data/causeandeffect/hc-covid19-sem-data.csv")
names(coronadata)
coronadatascaled <- scale(coronadata[, 2:14])
View(coronadatascaled)
coronamodel <- '
pandemic =~ Active.Cases + Cured.Discharged.Migrated + Deaths
healthcap =~ NumPrimaryHealthCenters_HMIS + NumCommunityHealthCenters_HMIS + NumSubDistrictHospitals_HMIS + NumDistrictHospitals_HMIS + NumPublicBeds_HMIS + NumRuralHospitals_NHP18 + NumRuralBeds_NHP18 + NumUrbanHospitals_NHP18 + NumUrbanBeds_NHP18
# direct
pandemic =~ c*healthcap
# mediator
Received.all.8.basic.vaccinations ~ a*healthcap
pandemic ~ b*Received.all.8.basic.vaccinations
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
coronafit <- lavaan::sem(coronamodel, data = coronadatascaled)
coronamodel <- '
pandemic =~ Active.Cases + Cured.Discharged.Migrated + Deaths
healthcap =~ NumPrimaryHealthCenters_HMIS + NumCommunityHealthCenters_HMIS + NumPublicBeds_HMIS + NumRuralHospitals_NHP18 + NumRuralBeds_NHP18 + NumUrbanHospitals_NHP18 + NumUrbanBeds_NHP18
# direct
pandemic =~ c*healthcap
# mediator
Received.all.8.basic.vaccinations ~ a*healthcap
pandemic ~ b*Received.all.8.basic.vaccinations
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
coronafit <- lavaan::sem(coronamodel, data = coronadatascaled)
coronafit
summary(coronafit, fit.measures= TRUE)
library(semPlot)
library(semptools)
p_pa2 <- semPaths(coronafit, whatLabels = "est",
sizeMan = 10,
edge.label.cex = 1.15,
style = "ram",
nCharNodes = 0, nCharEdges = 0)
par(mfrow=c(1, 2))
semPaths(coronafit)
p_pa3 <- mark_sig(p_pa1, coronafit)
par(mfrow=c(1, 2))
par(mfrow=c(1, 2))
semPaths(coronafit)
p_pa3 <- mark_sig(p_pa1, coronafit)
plot(p_pa3)
p_pa2 <- semPaths(coronafit, whatLabels = "est",
sizeMan = 10,
edge.label.cex = 1.15,
style = "ram",
nCharNodes = 0, nCharEdges = 0)
library(tm)
lit <- read.csv(file.choose())
names(lit)
lit_abs <- lit["Abstract"]
length(t(lit_abs))
corp <- VCorpus((VectorSource(t(lit_abs))))
dtm <- DocumentTermMatrix(corp,
control = list(weighting =
function(x)
weightTfIdf(x, normalize =
FALSE),
stopwords = TRUE))
dim(tm::inspect(dtm))
hcdf <- data.frame(tm::inspect(dtm))
names(hcdf)
tm::inspect(dtm)[11, ]
tdm <- TermDocumentMatrix(corp, control = list(removePunctuation = TRUE, stopwords = TRUE))
dim(tm::inspect(tdm))
opencolab <- read.csv(file.choose())
names(innopoli)
names(opencolab)
head(innopoli)
head(opencolab)
library(lavaan)
names(opencolab)
library(lavaan)
model <- '
# latent
healthcareoutcomes =~ health + healthcare + healthy + ehealth + mhealth + telehealth
opencollab =~ open + openaccess + openness + opensource + collaborative + collaboratively + collaboratives
openinnovation =~ open + openaccess + openness + opensource + Innovation + innovations
# direct effect
healthcareoutcomes ~ a*openinnovation
# mediator
opencollab ~ a*healthcareoutcomes
openinnovation ~ a*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, innopoli)
help('sem')
fit <- sem(model, scale(opencolab))
names(opencolab)
model <- '
# latent
healthcareoutcomes =~ health + healthcare + healthy + ehealth + mhealth + telehealth
opencollab =~ open + openaccess + openness + opensource + collaborative + collaboratively + collaboratives
openinnovation =~ open + openaccess + openness + opensource + innovation + innovations
# direct effect
healthcareoutcomes ~ a*openinnovation
# mediator
opencollab ~ a*healthcareoutcomes
openinnovation ~ a*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
model <- '
# latent
healthcareoutcomes =~ health + healthcare + healthy + ehealth + mhealth + telehealth
opencollab =~ open + openaccess + openness + opensource + collaborative + collaboratively + collaboratives
openinnovation =~ open + openaccess + openness + opensource + innovation + innovations
# direct effect
healthcareoutcomes ~ a*openinnovation
# mediator
opencollab ~ a*healthcareoutcomes
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
model <- '
# latent
healthcareoutcomes =~ health + healthcare + healthy + ehealth + mhealth + telehealth
opencollab =~ open + openaccess + openness + opensource + collaborative + collaboratively + collaboratives
openinnovation =~ open + openaccess + openness + opensource + innovation + innovations
# direct effect
healthcareoutcomes ~ c*openinnovation
# mediator
opencollab ~ a*healthcareoutcomes
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
summary(fit, fit.measures = TRUE)
model <- '
# latent
healthcareoutcomes =~ health + ehealth + mhealth + telehealth
opencollab =~ open + openaccess + opensource + collaborative + collaboratively + collaboratives
openinnovation =~ open + openaccess + opensource + innovation
# direct effect
healthcareoutcomes ~ c*openinnovation
# mediator
opencollab ~ a*healthcareoutcomes
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
summary(fit, fit.measures = TRUE)
model <- '
# latent
healthcareoutcomes =~ health + ehealth + mhealth + telehealth
opencollab =~ open + opensource + collaborative
openinnovation =~ open + opensource + innovation
# direct effect
healthcareoutcomes ~ c*openinnovation
# mediator
opencollab ~ a*healthcareoutcomes
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
summary(fit, fit.measures = TRUE)
model <- '
# latent
healthcareoutcomes =~ health + ehealth + mhealth + telehealth
opencollab =~ open+ collaborative
openinnovation =~ open + innovation
# direct effect
healthcareoutcomes ~ c*openinnovation
# mediator
opencollab ~ a*healthcareoutcomes
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
summary(fit, fit.measures = TRUE)
model <- '
# latent
healthcareoutcomes =~ health + ehealth + mhealth + telehealth
opencollab =~ open + collaborative
openinnovation =~ open + innovations
# direct effect
healthcareoutcomes ~ c*openinnovation
# mediator
opencollab ~ a*healthcareoutcomes
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
summary(fit, fit.measures = TRUE)
model <- '
# latent
healthcareoutcomes =~ health + ehealth + mhealth + telehealth
opencollab =~ open + collaborative
openinnovation =~ open + innovations
# direct effect
healthcareoutcomes ~ c*openinnovation
# mediator
opencollab ~ a*healthcareoutcomes
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, opencolab)
summary(fit, fit.measures = TRUE)
model <- '
# latent
# healthcareoutcomes =~ health + ehealth + mhealth + telehealth
opencollab =~ open + collaborative
openinnovation =~ open + innovations
# direct effect
health ~ c*openinnovation
# mediator
opencollab ~ a*healthcareoutcomes
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
model <- '
# latent
# healthcareoutcomes =~ health + ehealth + mhealth + telehealth
opencollab =~ open + collaborative
openinnovation =~ open + innovations
# direct effect
health ~ c*openinnovation
# mediator
opencollab ~ a*health
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
summary(fit, fit.measures = TRUE)
names(opencolab)
model <- '
# latent
healthcareoutcomes =~ health + ehealth + mhealth + telehealth
opencollab =~ open + collaboratives
openinnovation =~ open + innovations
# direct effect
health ~ c*openinnovation
# mediator
opencollab ~ a*health
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
summary(fit, fit.measures = TRUE)
model <- '
# latent
# healthcareoutcomes =~ health + ehealth + mhealth + telehealth
# opencollab =~ open + collaboratives
# openinnovation =~ open + innovations
# direct effect
health ~ c*innovation
# mediator
collaborative ~ a*health
innovation ~ b*collaborative
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
summary(fit, fit.measures = TRUE)
getcwd()
getwd()
setwd('D:/Research/papers/HC/oci/R/outputs')
getwd()
write.csv(parameterEstimates(fit), 'open_collab_fit.csv')
write.csv(fitmeasures(fit), 'open_collab_fit_measures.csv')
library(semPlot)
library(semptools)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
semPaths(fit)
p_pa2 <- mark_sig(p_pa, fit)
plot(p_pa2)
help('semPaths')
semPaths(fit, rotation = 1)
semPaths(fit, rotation = 2)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
semPaths(fit, rotation = 2)
p_pa2 <- mark_sig(p_pa, fit)
p_pa2 <- mark_sig(p_pa, fit)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
semPaths(fit, rotation = 2)
p_pa <- semPaths(fit, whatLabels = "est",
sizeMan = 10,
edge.label.cex = 1.15,
style = "ram",
nCharNodes = 0, nCharEdges = 0)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
semPaths(fit, rotation = 2)
p_pa <- semPaths(fit, whatLabels = "est",
sizeMan = 10,
edge.label.cex = 1.15,
style = "ram",
nCharNodes = 0, nCharEdges = 0, rotation = 2)
p_pa2 <- mark_sig(p_pa, fit)
plot(p_pa2)
semPaths(fit, rotation = 2, layout = 'circle2')
semPaths(fit, layout = 'circle2')
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
semPaths(fit, layout = 'circle2')
p_pa <- semPaths(fit, whatLabels = "est",
sizeMan = 10,
edge.label.cex = 1.15,
style = "ram",
nCharNodes = 0, nCharEdges = 0, layout = 'circle2')
p_pa2 <- mark_sig(p_pa, fit)
plot(p_pa2)
model <- '
# latent
# healthcareoutcomes =~ health + ehealth + mhealth + telehealth
opencollab =~ open + collaboratives
openinnovation =~ open + innovations
# direct effect
health ~ c*openinnovation
# mediator
opencollab ~ a*health
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
summary(fit, fit.measures = TRUE)
names(opencolab)
model <- '
# latent
# healthcareoutcomes =~ health + ehealth + mhealth + telehealth
opencollab =~ opennes + collaboratives
openinnovation =~ opennes + innovations
# direct effect
health ~ c*openinnovation
# mediator
opencollab ~ a*health
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
model <- '
# latent
# healthcareoutcomes =~ health + ehealth + mhealth + telehealth
opencollab =~ openness + collaboratives
openinnovation =~ openness + innovations
# direct effect
health ~ c*openinnovation
# mediator
opencollab ~ a*health
openinnovation ~ b*opencollab
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)
'
fit <- sem(model, scale(opencolab))
summary(fit, fit.measures = TRUE)
help('fa')
help('factanal')
factanal(opencolab, 3)
library(psych)
fit <- factanal(opencolab, 3)
structure.diagram(fit)
fa.diagram(fit)
structure.graph(fit)
fa(opencolab, 3)
fit1 <- fa(opencolab, 3)
structure.diagram(fit1)
structure.diagram(fit1)
dim(opencolab)
names(opencolab)
opencolab <- opencolab[, 2:26]
fit1 <- fa(opencolab, 3)
structure.diagram(fit1)
loadings(fa_fit)
loadings(fit1)
getwd()
write.csv(loadings(fit1), 'opencollab-loadings.csv')
write.csv(fa_fit$r.scores, 'opencollab-rscores.csv')
write.csv(fit1$r.scores, 'opencollab-rscores.csv')
names(opencolab)
alpha(opencolab)
rel <- alpha(opencolab)
rel$item.stats
rel$alpha.drop
rel$scores
rel$Fit
rel$var.r
rel$response.freq
rel$scores
rel$feldt
rel$scores
summary(rel)
data.frame(summary(rel))
data.frame(unclass(summary(rel)))
t(unclass(summary(rel)))
t(summary(rel))
summary(rel)
scree(fit1)
psych::scree(fit1)
psych::scree(fit1$R2.scores)
psych::scree(fit1$fit)
psych::scree(fit1$r.scores)
psych::scree(fit1$R2)
fit2 <- fa(opencolab, 1)
structure.diagram(fit2)
fit2
summary(fit2)
fit2$loadings
write.csv(loadings(fit2), 'opencollab-gf-loadings.csv')
write.csv(fit2$r.scores, 'opencollab-gf-rscores.csv')
